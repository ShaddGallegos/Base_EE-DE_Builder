---
- name: Build Execution Environments
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    # NEW: Add support for selected environments (maintains CLI compatibility)
    selected_environments: "{{ selected_environments | default([]) }}"
    environments_dir: "{{ playbook_dir }}/environments"
    
  tasks:
    # NEW: Handle selected environments logic
    - name: Find all available environments (when none selected)
      ansible.builtin.find:
        paths: "{{ environments_dir }}"
        file_type: directory
        excludes: ".*"
      register: all_environments
      when: selected_environments | length == 0

    - name: Set environment list - Auto-discover all environments  
      ansible.builtin.set_fact:
        environment_list: "{{ all_environments.files | map(attribute='path') | map('basename') | list | sort }}"
      when: selected_environments | length == 0

    - name: Set environment list - Use selected environments
      ansible.builtin.set_fact:
        environment_list: "{{ selected_environments }}"
      when: selected_environments | length > 0

    # NEW: Validate selected environments exist
    - name: Validate selected environments exist
      ansible.builtin.stat:
        path: "{{ environments_dir }}/{{ item }}"
      register: env_check
      loop: "{{ environment_list }}"
      when: selected_environments | length > 0

    - name: Fail if selected environment doesn't exist
      ansible.builtin.fail:
        msg: "Environment '{{ item.item }}' not found in {{ environments_dir }}"
      loop: "{{ env_check.results }}"
      when: 
        - selected_environments | length > 0
        - not item.stat.exists
      loop_control:
        label: "{{ item.item }}"

    # ORIGINAL: Keep your original task structure, just add FQCN and use environment_list
    - name: Build execution environments
      ansible.builtin.command: >
        ansible-builder build
        --build-arg ANSIBLE_GALAXY_CLI_COLLECTION_OPTS=--ignore-certs
        --container-runtime {{ container_runtime | default('podman') }}
        --file {{ environments_dir }}/{{ item }}/execution-environment.yml
        --tag {{ item }}:latest
        --verbosity 1
      args:
        chdir: "{{ environments_dir }}/{{ item }}"
      loop: "{{ environment_list }}"
      register: build_results

    # NEW: Optional build summary (can be removed if you don't want it)
    - name: Display build results
      ansible.builtin.debug:
        msg: "Built {{ environment_list | length }} environments: {{ environment_list | join(', ') }}"
